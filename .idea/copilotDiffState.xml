<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/build.gradle.kts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/build.gradle.kts" />
              <option name="originalContent" value="/*&#10; * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10; *  you may not use this file except in compliance with the License.&#10; *  You may obtain a copy of the License at&#10; *&#10; *          http://www.apache.org/licenses/LICENSE-2.0&#10; *&#10; *   Unless required by applicable law or agreed to in writing, software&#10; *   distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10; *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10; *   See the License for the specific language governing permissions and&#10; *   limitations under the License.&#10; */&#10;&#10;plugins {&#10;    kotlin(&quot;jvm&quot;) version &quot;2.2.20&quot;&#10;}&#10;&#10;group = &quot;io.github.kolod&quot;&#10;version = &quot;4.0&quot;&#10;&#10;repositories {&#10;    mavenCentral()&#10;}&#10;&#10;dependencies {&#10;    implementation(&quot;org.jetbrains.kotlin:kotlin-stdlib-jdk8&quot;)&#10;&#10;    // Logging&#10;    implementation(&quot;org.apache.logging.log4j:log4j-core:2.25.2&quot;)&#10;    implementation(&quot;org.apache.logging.log4j:log4j-api:2.25.2&quot;)&#10;&#10;    // JNA&#10;    implementation(&quot;net.java.dev.jna:jna:5.18.0&quot;)&#10;    implementation(&quot;net.java.dev.jna:jna-platform:5.18.0&quot;)&#10;&#10;    // JFA&#10;    implementation(&quot;de.jangassen:jfa:1.2.0&quot;) {&#10;        exclude(group = &quot;net.java.dev.jna&quot;, module = &quot;jna&quot;) // different jna version&#10;    }&#10;&#10;    // OSHI&#10;    implementation(&quot;com.github.oshi:oshi-core:6.9.0&quot;)&#10;&#10;    // Version compare&#10;    implementation(&quot;io.github.g00fy2:versioncompare:1.5.0&quot;)&#10;&#10;    // Annotations&#10;    implementation(&quot;org.jetbrains:annotations:26.0.2-1&quot;)&#10;&#10;    // Test&#10;    testImplementation(&quot;org.jetbrains.kotlin:kotlin-test&quot;)&#10;    testImplementation(&quot;org.junit.jupiter:junit-jupiter:5.10.2&quot;)&#10;}&#10;&#10;tasks.test {&#10;    useJUnitPlatform()&#10;}&#10;&#10;tasks.register&lt;JavaExec&gt;(&quot;runGuiDemo&quot;) {&#10;    group = &quot;application&quot;&#10;    description = &quot;Runs the GuiDemo class&quot;&#10;    classpath = sourceSets[&quot;test&quot;].runtimeClasspath&#10;    mainClass.set(&quot;GuiDemo&quot;) // Use the fully qualified class name if in a package&#10;}" />
              <option name="updatedContent" value="/*&#10; * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10; *  you may not use this file except in compliance with the License.&#10; *  You may obtain a copy of the License at&#10; *&#10; *          http://www.apache.org/licenses/LICENSE-2.0&#10; *&#10; *   Unless required by applicable law or agreed to in writing, software&#10; *   distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10; *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10; *   See the License for the specific language governing permissions and&#10; *   limitations under the License.&#10; */&#10;&#10;plugins {&#10;    kotlin(&quot;jvm&quot;) version &quot;2.2.20&quot;&#10;}&#10;&#10;group = &quot;io.github.kolod&quot;&#10;version = &quot;4.0&quot;&#10;&#10;repositories {&#10;    mavenCentral()&#10;}&#10;&#10;dependencies {&#10;    implementation(&quot;org.jetbrains.kotlin:kotlin-stdlib-jdk8&quot;)&#10;&#10;    // Logging&#10;    implementation(&quot;org.apache.logging.log4j:log4j-core:2.25.2&quot;)&#10;    implementation(&quot;org.apache.logging.log4j:log4j-api:2.25.2&quot;)&#10;&#10;    // JNA&#10;    implementation(&quot;net.java.dev.jna:jna:5.18.0&quot;)&#10;    implementation(&quot;net.java.dev.jna:jna-platform:5.18.0&quot;)&#10;&#10;    // JFA&#10;    implementation(&quot;de.jangassen:jfa:1.2.0&quot;) {&#10;        exclude(group = &quot;net.java.dev.jna&quot;, module = &quot;jna&quot;) // different jna version&#10;    }&#10;&#10;    // OSHI&#10;    implementation(&quot;com.github.oshi:oshi-core:6.9.0&quot;)&#10;&#10;    // Version compare&#10;    implementation(&quot;io.github.g00fy2:versioncompare:1.5.0&quot;)&#10;&#10;    // Annotations&#10;    implementation(&quot;org.jetbrains:annotations:26.0.2-1&quot;)&#10;&#10;    // Test&#10;    testImplementation(&quot;org.jetbrains.kotlin:kotlin-test&quot;)&#10;    testImplementation(&quot;org.junit.jupiter:junit-jupiter:5.10.2&quot;)&#10;}&#10;&#10;tasks.test {&#10;    useJUnitPlatform()&#10;}&#10;&#10;tasks.register&lt;JavaExec&gt;(&quot;runGuiDemo&quot;) {&#10;    group = &quot;application&quot;&#10;    description = &quot;Runs the GuiDemo class&quot;&#10;    classpath = sourceSets[&quot;test&quot;].runtimeClasspath&#10;    mainClass.set(&quot;GuiDemo&quot;) // Use the fully qualified class name if in a package&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>